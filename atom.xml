<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://liam11811.github.io</id>
    <title>Gamer的个人博客</title>
    <updated>2022-10-21T14:03:48.176Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://liam11811.github.io"/>
    <link rel="self" href="https://liam11811.github.io/atom.xml"/>
    <subtitle>记录游戏过程中的所思所想</subtitle>
    <logo>https://liam11811.github.io/images/avatar.png</logo>
    <icon>https://liam11811.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Gamer的个人博客</rights>
    <entry>
        <title type="html"><![CDATA[伤害公式的基础总结]]></title>
        <id>https://liam11811.github.io/post/shang-hai-gong-shi/</id>
        <link href="https://liam11811.github.io/post/shang-hai-gong-shi/">
        </link>
        <updated>2022-10-20T06:04:14.000Z</updated>
        <content type="html"><![CDATA[<p>等式<br>
损失=攻击<br>
符合直觉<br>
极致简单<br>
没有防御 防具的设计要大改 游戏丰富性和付费点打折扣 但用等式的游戏内容未必少 为弥补丰富性 可以拆攻击 增加攻击种类 按属性、按武器、按攻击方式 同时增加防御种类<br>
但是可以有护盾、第二hp 内容丰富度上未必低于防御力<br>
FPS（高频攻击） 免费小游戏</p>
<p>减法公式<br>
Dam=Atk-Def<br>
符合直觉<br>
规律明显<br>
有敏感点：Atk和Dam接近时，小小的数值提升对回合数的影响极大，对玩家的刺激明显。</p>
<p>破防问题<br>
无法直观感受到结果的变化 数值变化与最终的伤害输出缺乏直接的联系 调试攻击 对损失的感觉不直接<br>
变体1：攻击×2=防御+损失 若自由加点 造成属性价值失衡<br>
变体2：注意属性投放 还是有属性价值失衡的问题<br>
适合有“坎（关卡、片区）”的游戏 适合无成长或者成长较小的游戏 不适合成长丰富（付费升级点多）、自由加点的游戏<br>
不适合存在怪物攻击怪物的游戏（除非给怪物攻击怪物单独做一套数值）</p>
<p>完美？公式<br>
损失=攻击×攻击系数÷防御<br>
推导速度快<br>
调试速度快</p>
<p>乘法公式<br>
Dam=Atk×（1-Def/Def+X）=Atk×X/（Def+X）<br>
攻击和损失关系清楚<br>
但防御不直观 大方向是防御高损失低 防御的成长前后不规律<br>
X是什么？也不直观 X越低，防御的效力越强<br>
变体1：X=常数 王者荣耀、英雄联盟 单局内成长相对可控<br>
变体2：X=常数+攻方等级修正（等级×倍数） 随着攻方等级提升，防方也需要增加防御值，防御的投放依赖于等级<br>
变体3：X=Atk  防御的投放可以伴随着攻击的投放而投放 Dam=Atk^2/(Atk+Def)（这也是所谓“除法公式”的一种）</p>
<p>除法公式<br>
变体1：Dam=Atk/Def<br>
攻方线性投放，伤害不变<br>
变体2：Dam=Atk^2/Def<br>
Dam可能高于Atk，不合常识；攻击价值过高。<br>
变体3：Dam=Atk^2/(Atk+Def)</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【记录】在校期间游戏相关课程中的想法碎片]]></title>
        <id>https://liam11811.github.io/post/ji-lu-zai-xiao-qi-jian-you-xi-xiang-guan-ke-cheng-zhong-de-xiang-fa-sui-pian/</id>
        <link href="https://liam11811.github.io/post/ji-lu-zai-xiao-qi-jian-you-xi-xiang-guan-ke-cheng-zhong-de-xiang-fa-sui-pian/">
        </link>
        <updated>2022-10-19T11:11:53.000Z</updated>
        <content type="html"><![CDATA[<p>摘要：笔者在经过一段时间的学习后，试图以“策划的思维“，重新审视自己在课上迈出的游戏设计第一步。</p>
<p>在“电子游戏通论”课上，老师要求同学们提交一份原创的游戏设计文档，有技术者可以提交demo。笔者受限于当时的水平，没有过多考虑就决定创作游戏设计文档。</p>
<p>如何设计一个游戏，或者如何设计游戏的一个系统？笔者当时只是站在玩家角度，考虑要好玩、要抓人眼球，受到当时火爆的页游广告“吞鲲”系列的启发，也大笔一挥构想了一个以吞噬神话中异兽为核心玩法的RPG。<br>
还煞有介事地谈到了数值：<br>
<img src="https://liam11811.github.io/post-images/1666114633410.png" alt="" loading="lazy"><br>
PS：笔者在写出这段文字的几个月之后才稍微系统地了解伤害公式<br>
也津津有味地强调玩法有趣在哪里：<br>
<img src="https://liam11811.github.io/post-images/1666115412724.png" alt="" loading="lazy"></p>
<p>不难看出，当时的设计是不成熟的、也不成体系的，是一名玩家突然受到启发，认为“这样会很好玩”才诞生的创意。现在可不能停留在这一步，我是这样重新思考的：</p>
<hr>
<p>（1）我想让游戏达到这样一个<strong>预期体验</strong>：<strong>实时</strong>将角色的成长反映在外观上，以便使成长<strong>随时</strong>都能被玩家自己和其他玩家<strong>清晰</strong>感知到，带来明确的即时反馈。</p>
<p>（2）当前许多游戏没有很好达到这种体验：对于有一定动作元素的RPG来说，在战斗之外，数值的成长体现在面板中，装备的成长主要体现在面板（其次在外观，然而很多时候外观改变同样不够明显）。很多时候不打开角色状态面板和装备面板都感觉不到角色的成长。</p>
<p>（3）有哪些游戏较好实现了这种体验？<br>
《贪吃蛇》和《大鱼吃小鱼》：每次吞吃金币或者小鱼，玩家操作的角色身体都会膨大（同时一定程度上对玩家后续操作精细度提出更高要求）。<br>
《宝可梦》：精灵成长到一定阶段即可进化，显著提升其形象的力量感。<br>
其精髓在于：吃金币、吃小鱼、进化都直接作用于角色的身体，正是身体的变化最为清晰可感——每次数值成长，都给到角色的身体一次小小的进化。</p>
<p>（4）如何实现这种预期体验？一个初步的思考<br>
以吞噬被击败的敌人作为成长的主要途径（而非获得经验升级、获得强化素材强化装备），每次吞噬都可以基于敌人特性有选择地强化角色肉体的各个（生物学意义上的）系统或器官，并直接反映在外观：更大体积的肌肉、更舒展的骨架、更坚实的皮肤或甲片、更锋锐的爪、更有力的翅。<br>
实现这种体验也需要让步：主角和敌人最好是同根同源或是近亲，例如主角是半兽人、敌人是半兽人或兽形怪物。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【随想】聊聊动作游戏打击感]]></title>
        <id>https://liam11811.github.io/post/sui-xiang-liao-liao-dong-zuo-you-xi-da-ji-gan/</id>
        <link href="https://liam11811.github.io/post/sui-xiang-liao-liao-dong-zuo-you-xi-da-ji-gan/">
        </link>
        <updated>2022-10-17T16:24:39.000Z</updated>
        <content type="html"><![CDATA[<p>回顾游戏经历，“动作天尊”卡普空旗下的游戏、“白金打工仔”白金工作室制作的游戏，以及其他一些动作元素占有重要地位的热门ARPG，自己都有所了解了。下面简单总结一下ACT和ARPG（有时这两者的界线稍显模糊）中如何强化打击感。</p>
<p>关于打击感的定义，笔者并未找到非常详细、足够权威的说法。笔者自己更愿意将其理解为，<strong>战斗全流程中游戏提供给玩家的反馈</strong>，这是一个稍显宽泛的定义。<strong>反馈</strong>在内容上要求量大管饱品质高，能给予玩家充分的感官刺激，驱动其继续游玩；在信息上要求能反映当前战斗状况，辅助玩家判断局势。内容上足质、足量，信息上及时、有意义的反馈是好的反馈。</p>
<p>加强打击感可以从视觉上和听觉上两方面入手，笔者想提一些自己感触较深的点。</p>
<p>视觉上：</p>
<p><strong>运镜手法</strong>。角色受击或大力攻击时镜头晃动、发动绝招时给角色特写……摄像机位置不受限的游戏人有条件学习并超越影视人。</p>
<p><strong>受击动作</strong>。敌人的受击动作，比如僵直、击飞、击倒，直观地告诉玩家自己的攻击是否命中，而不需要通过伤害显示和血条判断。至于<strong>攻击动作</strong>，笔者目前游玩过的大作水准都在线。<br>
聊到受击动作，不得不提<strong>卡肉感</strong>，或称<strong>顿帧</strong>。首先是击中敌人时的卡肉感，这点在《怪猎：世界》中使用势大力沉的大剑、切割敌人的锋利太刀时体会较为明显，有经验的玩家能通过卡肉感的微妙区别判断自己是否击中怪物弱点。但总体来说《怪猎：世界》中角色的出招频率并不高，同时击中的怪物数量不多（很多时候是多人共斗一个怪物），强化卡肉感没有问题；但出招节奏快、同场怪物多的游戏未必适合广泛应用卡肉感。其次是自己受击时存在顿帧。这点在《尼尔：机械纪元》中表现较为明显。受击顿帧能留给玩家短暂的思考和调整时间，也是对玩家被击中的强力反馈。总的来说，卡肉和顿帧的意义还是在于强化反馈，强化反馈的方法是直接暂停几帧，给玩家大脑反应和记忆的时间。</p>
<p><strong>特效</strong>。作为一种<strong>夸张的表现手法</strong>，特效能极大吸引玩家注意，一定程度掩盖动作细节的不足；直观的色彩还能将不同的技能或招式分明地区别开；能显著地标识技能或招式的作用范围（如《法环》“冻霜踏地”完全依赖冰霜特效显示攻击范围），特效也能用于扩大武器攻击范围。</p>
<p>听觉上：</p>
<p><strong>攻击和受击音效不能过于重复</strong>。在观看游戏视频、评判其打击感时，笔者学会了闭上眼睛听防具或肉体被武器击中的声音，以及攻击者出招时喊出的语气词。在这种抛开画面的情境下，如果音效过于重复，真会有一种玩家在用相同力道反复揉捏一只小黄鸭玩具的错觉。音效也是反馈的来源之一：《只狼》的“打铁”音效就有14种，分别对应block、deflect和big deflect，避免重复性的同时也为玩家提供了关于当前格挡效果的信息反馈，难怪本作有“打铁游戏”的别称。</p>
<p><strong>音效出现的位置要准</strong>，最好在判定击中前后，以便玩家参考。《鬼泣5》尼禄的剑“绯红女皇”可以在攻击动画的某些帧更高效充能（俗称“红刀”），不少up传授的判定方法是以音效出现的时刻作为按下充能键的参考之一。如果需要用闪避或者跳跃来尽早取消攻击后摇，准时的击中音效也是十分重要的。</p>
<p><strong>BGM变化</strong>。BGM不如打击和受击音效来得直观，但这方面的杰出者《鬼泣5》的BGM（连同整个动作华丽度系统）确实符合笔者关于“打击感”的宽泛定义。起伏变化的节拍以及即时播报的华丽度语音确实足够爽快，也能提供关于当前战斗状态的反馈。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[【随笔创作中】从《FF14》固定队说起，谈游戏内社交]]></title>
        <id>https://liam11811.github.io/post/sui-bi-cong-lesslessff14greatergreater-gu-ding-dui-shuo-qi-tan-you-xi-nei-she-jiao/</id>
        <link href="https://liam11811.github.io/post/sui-bi-cong-lesslessff14greatergreater-gu-ding-dui-shuo-qi-tan-you-xi-nei-she-jiao/">
        </link>
        <updated>2022-10-15T19:38:40.000Z</updated>
        <content type="html"><![CDATA[<p>《FF14》是笔者游玩的第一款MMO。在推进主线的过程中，笔者被一名玩家A邀请一起跑图，A随后还向笔者发放了（游戏内）婚礼请柬。在婚礼现场，笔者第一次见到了双方庞大的亲友团，借此机会和几名新玩家组成了交流群和固定队伍，一起攻略副本、交换物品、谈天说地，并吸纳新成员加入。</p>
<p>回忆了固定队组成、壮大的过程以及自己在其中的收获，笔者想谈谈对网游社交的一些感想。</p>
<p><strong>有效社交的前提是，能先识别出各个玩家</strong>，再从中寻找发送组队请求或私聊消息的玩家。笔者之前倾向于认为，搭建好“展示”的场景或空间，并富集“展示”的密度，社交就会自然而然地发生。其实事情不完全是这样，有效的社交还需要一方有一定的辨识度。</p>
<p>以笔者参加的这场婚礼为例，全场最引人注意的当属体型娇小、外观可爱、表情动作丰富的两名拉拉菲尔族玩家。事实也证明婚礼的两位主角和这两位最引人注意的客人因此强化了联系。而当笔者在推进主线的路上被发请柬时，笔者的可识别特征其实只有非常常规的昵称、称号、外观和新人标记。如果不是A察觉到笔者和他推进主线的进度完全一致、因而有许多共同话题，可能就不会选择发送婚礼请柬以加深联系——毕竟笔者那时的角色放在人群中只能说是平平无奇。</p>
<p>同其他游戏一样，昵称显示号主的个性，少数时候能揭示号主的兴趣爱好；称号和外观一般显示号主的游玩深度和付费情况；而<strong>状态标记</strong>则是本作较有特色的设计：带有“豆芽”标记的是新人，带“豆花”标记的是回归玩家，带各种“皇冠”标记的是战斗指导者、制作指导者以及对战指导者。</p>
<p>此外，《FF14》国服前段时间更新的“<strong>冒险者铭牌</strong>”就是笔者所认为能提高玩家辨识度的设计，它独立于显示职业、装备的信息面板，侧重于显示玩家的大头贴、在线时段、游玩偏好以及个人宣言，显然是为组队战斗或者组团游玩服务的：<br>
<img src="https://liam11811.github.io/post-images/1665855503230.png" alt="" loading="lazy"></p>
<p>社交的意义：</p>
<p>首先为玩家提供了真实世界以外、又不完全游离于真实世界之外的第二个社交圈。</p>
<p><strong>提高玩家的游玩时长和游玩深度</strong>。由于游戏内社交中建立起的人与人的连结，玩家乐意陪伴游戏内的朋友在线上度过更长时间——哪怕只是两三个人原地等待另外两三个人结束各自正在游玩的内容、转而一起游玩别的内容，也不会觉得时间被虚度。此外，玩家也会在亲友的陪伴和鼓励下走出自己的舒适区，尝试游玩别的职业或挑战更难的副本。笔者和几位亲友出于不给别人添麻烦以及避免可能纠纷的考虑，并不会在野队中练习不熟悉的职业，而是在固定队中练习，这样能得到更多的包容和指导。</p>
<p>笔者认为这是现实社交和游戏内社交的共通之处，大概是因为人的本性决定了他在朋友的陪伴下会获得不同于独处或者在陌生人群中时的情感体验。绝大多数人终究还是需要社交的。</p>
<p>抒情的文字写了这么多，是时候聊聊《FF14》在社交上所做的其他设计了：</p>
<p>（1）<strong>清晰的好友和部队成员状态显示</strong>。</p>
<p>（2）<strong>作为强联系的师徒和伴侣</strong>。</p>
<p>（3）<strong>各取所需的招募板</strong>。</p>
<p>（4）<strong>分频道的世界聊天</strong>。</p>
<p>（5）<strong>多人同屏的狩猎和限时任务“车队”</strong>。</p>
<p>（6）<strong>战斗结算后互动</strong>。</p>
<p>笔者认为，本着适度强化社交、但不迫使玩家社交的心愿，本作的社交设计还可以做以下改进：</p>
<p>（1）<strong>排行榜设到玩家身边来</strong>。笔者犹记得在全服的小游戏排行榜上见到现实朋友时的意外，还特意向朋友确认并询问详情，自己也开始体验以前没有接触的小游戏——“我身边的玩家也能登榜，看来榜上并不都是遥不可及的高手，那我完全可以冲榜试试嘛”：<br>
<img src="https://liam11811.github.io/post-images/1665854365232.jpg" alt="" loading="lazy"><br>
常规的排行榜总使绝大多数玩家感到上榜是一件遥不可及的事情，但如果能另设范围局限在玩家好友、好友的好友、部队成员、住宅区邻居的排行榜，玩家的冲榜欲望会得到增强。</p>
<p>（2）<strong>激发阵营间的比拼</strong>。现版本中，每位玩家在完成一项初期任务后都会选择加入“大国防联军”的三支军队之一，三支军队在设定上并非敌对，而是合作关系。可以给现有的“大国防联军”系统引入竞争性要素，例如比拼每支军队成员一定时段内的“军票（衡量个人对军队贡献程度的货币）”提交总量，或者每支军队各自为一项重大工程筹集材料并比拼最终完成度，调动玩家为所属军队收集和提交材料的积极性。</p>
<p>（3）<strong>加强家园系统中玩家间互动</strong>。家园承载玩家的心血和情感寄托，若能在家园中多与同样寄托了情感的好友互动，或借此打造良好的邻里互动，将再次加强玩家与游戏的情感连结；而且家园本就适合引入共同建设、共同耕耘收获的小小玩法。游戏中的“家园留言簿”就是很好的示范。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[《FF14》常见Boss战机制梳理]]></title>
        <id>https://liam11811.github.io/post/chuang-zuo-zhong-lesslessff14greatergreater-chang-jian-boss-zhan-ji-zhi/</id>
        <link href="https://liam11811.github.io/post/chuang-zuo-zhong-lesslessff14greatergreater-chang-jian-boss-zhan-ji-zhi/">
        </link>
        <updated>2022-10-15T05:34:18.000Z</updated>
        <content type="html"><![CDATA[<p><img src="https://liam11811.github.io/post-images/1665812110617.png" alt="" loading="lazy"><br>
<img src="https://liam11811.github.io/post-images/1665824609904.png" alt="" loading="lazy"><br>
<img src="https://liam11811.github.io/post-images/1665824632478.png" alt="" loading="lazy"><br>
<img src="https://liam11811.github.io/post-images/1665824635598.png" alt="" loading="lazy"></p>
<p>笔者通关了《FF14》6.0版本以前的全部主线副本，将自己所遇到过的Boss战机制总结如上图。<br>
上图还缺失了一个关键因素——<strong>机制出现的时机</strong>，包括机制出现的先后次序和时间点。在展开讨论之前，我们首先明确，机制的出现往往是Boss发动技能的结果。因此，要研究机制出现的时机，就要研究Boss发动技能的时机。在《FF14》中，Boss何时发动技能一般依赖于两个因素：Boss的血量和开战所经历的时间。技能在血量或时间两个两笔上的排列就分别叫做<strong>血量轴</strong>和<strong>时间轴</strong>。</p>
<p>两种排列方式各有什么特点？</p>
<p>血量轴的特点在于，成功挑战Boss必然会将其血量从100%降至0%，设计者所安排的机制一般都能在实战中出现；而且很符合“敌人血量越少，越容易狂暴或者使出绝招”的直觉，增加玩家在Boss战后期的紧张感。</p>
<p>时间轴的特点在于，作为衡量战斗进程的参照，时间的流速是稳定的；而Boss血量降低的速度在每次战斗中都不一样。换言之，时间轴使Boss的行为有了稳定的预期：Boss在战斗开始后第几分第几秒发动什么技能都是固定的。<strong>Boss行为的可预期性</strong>在《FF14》的高难副本中尤为重要，玩家需要据此安排自己的技能和走位：</p>
<p>Boss在某个时间节点将对坦克（T）发动高伤攻击“死刑”，T需要及时提前发动减伤技能；若死刑的发动比较密集，T还需合理安排自己多个减伤技能的施放实际去对抗死刑；Boss在某个时间节点将发动AOE，需要奶妈（H）提前为队友附加护盾、提前开始咏唱群体回复法术；Boss战机制可能打乱输出（D）的输出循环，要求D结合时间轴及时微调输出循环。</p>
<p>由于《FF14》职业的大多数技能为“<strong>公共CD技能</strong>”，即大量技能共享同一个2.5秒左右的CD；而且D、T各有自己的输出循环，H的许多法术需要相对长的咏唱时间后才能生效。因此在攻略采用时间轴的高难副本时，<strong>玩家往往会排出自己的时间轴以应对Boss战机制</strong>。<br>
<img src="https://liam11811.github.io/post-images/1665829130667.png" alt="" loading="lazy"><br>
如上图，左侧是Boss施放技能的时间点，纵向排列成轴；右侧是玩家针对机制自行排列的时间轴，指导了玩家施放技能的时机。</p>
<p>有些玩家会进一步地使用时间轴插件辅助游戏，如下图红框处就显示了当前应该施放的技能，极大降低了游戏难度，也影响了游戏乐趣：<br>
<img src="https://liam11811.github.io/post-images/1665829286100.png" alt="" loading="lazy"></p>
<p>笔者举上面两个例子，意在说明<strong>时间轴Boss战让玩家的攻略有明确规律可循</strong>——这或许就是大多数高难副本采用时间轴的原因。</p>
<p>如此设计，使反复攻略提高熟练度有了明确的方向和实在的意义，玩家能感觉到自己的练习收获极大，形成正反馈；同时由于普通人的操作难免失误，在熟悉敌我双方时间轴的前提下，如何应对（自己或队友）操作失误带来的危机，也能考验玩家的策略和应变能力，如若成功则带给玩家力挽狂澜的成就感，而且即使自己偶有失误，也因这是人之常情不会导致太多挫败感。</p>
<p>至于玩家是自行琢磨出一套应对机制的时间轴，还是将已有的时间轴熟记于心后再开始攻略，抑或是使用官方不建议的时间轴插件极大降低难度，则是玩家的选择。</p>
<p>对Boss战的机制以及对血量、时间两大轴的解说已经比较清晰了，那么能否基于此搭建一场新Boss战的框架呢？笔者认为，通过<strong>参考其他副本Boss战的机制和轴，结合队伍中各职业特点和副本特色，是可以通过在轴中安排技能（机制）来初步搭建Boss战框架的</strong>。但这也仅仅是Boss战的初步设计。</p>
<p>为了<strong>降低玩家的厌倦感，同时能使玩家在攻略副本中渐渐熟悉对常见机制的处理</strong>，可以参考前置副本Boss战出现的机制确定新副本Boss战的机制：<br>
<img src="https://liam11811.github.io/post-images/1665859233987.png" alt="" loading="lazy"><br>
笔者给出的初步答卷如下：<br>
<img src="https://liam11811.github.io/post-images/1665859245751.png" alt="" loading="lazy"></p>
<p>接下来就该将机制排列到轴中去。这里笔者采取以血量轴为主、时间轴为辅的混合排轴法：</p>
<p>假设T职业成长到副本规定等级50级时，已经掌握了3个减伤的非公共CD技能，其CD分别为小减伤60秒、中减伤75秒、大减伤90秒。为考验T合理安排减伤技能施放的能力，笔者排出“连续死刑”的时间轴：以T首次吸引到仇恨为时间起点，立即施放死刑一次，20秒后再施放死刑一次，80秒后重复此过程直到战斗结束。这样就要求T使用减伤效果强、持续时间短的两个减伤技能应对死刑，同时保留减伤效果弱、持续时间长的小减伤应对Boss其他相对低伤害的技能；等到第一次使用的减伤CD结束，也不能轻易释放，而要留到Boss读条死刑或者做出死刑抬手时再施放——这样的安排实现对减伤的最大利用，也降低了H的压力。</p>
<p>至于血量轴，则可以设定50%血量、25%血量、10%血量等关键节点，安排全屏AOE、召唤召唤物、点名等相对难以处理、特效相对华丽的机制，并辅以Boss的语音进一步提醒玩家；也可以直接安排转场，清除仇恨、缩小场地以及使用上半场未使用过的机制，把玩家带到更激烈的下半场战斗。</p>
<p>当然，上述所有只是笔者的初步想法；实际的Boss战机制设计、尤其是高难和8人或24人Boss战机制设计肯定要复杂的多。笔者期待能以本文作为开端，更细致地分析Boss战机制、总结其中的设计要点。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[浅谈游玩RPG过程中的内在和外在驱动力]]></title>
        <id>https://liam11811.github.io/post/chuang-zuo-zhong-tan-rpg-you-xi-de-nei-zai-he-wai-zai-qu-dong-li/</id>
        <link href="https://liam11811.github.io/post/chuang-zuo-zhong-tan-rpg-you-xi-de-nei-zai-he-wai-zai-qu-dong-li/">
        </link>
        <updated>2022-10-13T19:47:36.000Z</updated>
        <content type="html"><![CDATA[<p>“你在做这个任务，是因为发自内心地享受推进任务的过程，还是因为想要得到实在的任务奖励，抑或兼而有之？”在游玩RPG，尤其是做支线任务时，笔者时常这样问自己。</p>
<p>笔者用内在驱动力和外在驱动力来区分推动玩家继续游玩RPG的两种动力。<strong>外在驱动力</strong>主要指游戏机制提供给玩家的经验、金币、装备、道具乃至演出激发玩家继续游玩的动力；<strong>内在驱动力</strong>则排除了外在驱动力中那些（在游戏中）有形的、实在的动力源，更关注玩家自身的情感，包括新鲜感、探索欲、胜负心、同理心、正义感、虚荣心、群体认同感乃至对复仇或破坏的渴求等。</p>
<p>对不同玩家而言，同样一段游戏体验的内在驱动力和外在驱动力的来源和强度可能大有差异。玩家是各不相同的，依经典的<strong>MUD玩家分类标准</strong>，玩家有四类<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>：<br>
<img src="https://liam11811.github.io/post-images/1665584365496.png" alt="" loading="lazy"><br>
每类玩家的特点已经被前人总结得很完备，现引用如下：</p>
<blockquote>
<p>1）成就型玩家（Achievers）。成就型玩家主要关注的是如何在游戏中取胜或者达成某些特定的目标。这些目标可能包括游戏固有的成就或者玩家自己制定的目标。<br>
2）探险型玩家（Explorers）。探险型玩家尝试在虚拟世界的系统中寻找一切他们所能找到的东西。游戏设计师、收集爱好者是这类玩家中一类。<br>
3）社交型玩家（Socializers）。社交型玩家享受在游戏过程中与其他玩家的互动。除了人类一起游戏的社交本能，他们喜欢利用工会和团队的机制来进一步强化自己的社会存在感。<br>
4）杀手型玩家（Killers）。杀手型玩家喜欢把自己的意愿强加给他人。杀手型玩家又可以分为两类：有一类杀手型玩家在游戏中杀人是为了显示他们能力的强大；还有一类杀手型玩家的目的是骚扰或者激怒其他人，也被称为破坏者。</p>
</blockquote>
<p>对社交型玩家来说，游戏中缺少与他人的合作感、互动感可能降低其内在驱动力，而探险型玩家则不这么认为；对杀手型玩家来说，游戏要求全员合作、甚至连比较合作贡献的计分板都不展示可能降低其内在驱动力，而成就型玩家可能不会在意……但笔者想提出，对于任何类型的玩家，<strong>重复是内在驱动力的大敌</strong>，也是许多RPG（尤其是开放世界RPG）难以避免的问题。</p>
<p>《刺客信条：奥德赛》是笔者接触的首款开放世界ARPG，因此前20小时在生动多彩的世界中游历的体验对笔者来说完全称得上新奇、惊艳。可是到游戏中期，笔者发现野外的杂兵据点——不论它归属于哪个种族或势力，不论它位于采石场、原野、墓穴还是要塞，重复度都太高了；城镇中的民房、大道和集市也是如此。这里的重复度并不主要体现在场景素材利用上的重复，而在于承载着游戏内容的关卡。</p>
<p>以游戏内斯巴达和雅典两大阵营的要塞为例。本作是开放世界游戏，这个世界由众多区域组成，其中相当多位于野外的区域的主体是要塞（区域的其余部分则是内容相对稀薄的原野），也就是一个小型关卡<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>。<br>
笔者回忆了自己的游戏经历，并观看了一位up主潜入中大型据点（绝大多数潜入目标是要塞）的视频合集<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>，发现众多要塞关卡的设计高度重复，其要素可概括为：可以攀爬、有时存在缺口的城墙和守备相对严密的城门；由屋顶、高台、绳索打造的高度差；巡逻路线旁的草丛和杂物堆；很可能存在背对角色的士兵和隐藏宝箱的帐篷和建筑物……这些要塞关卡的各个区域在遵守要塞设计规范的前提下也难有新奇的组合方式，设计与野外水体连通的水道，或利用与山体的高低差设计另一条进攻或者逃离路线者已属难得。</p>
<p><strong>以刺客或战士或猎人的装备、潜入或强攻一座座雷同的要塞，玩家的内在驱动力很快被消磨到不足以再单独支撑玩家发动对下一座要塞的进攻。但是，本作很多时候也未提供足够的外在驱动力</strong>：</p>
<p>在这些高度重复的要塞、原野、市镇之中，排布着一个个支线任务交接地点和目标地点。本作有些支线任务设计精良，与其他部分支线以及主线有千丝万缕的联系；另一些支线任务则有凑数之嫌——毕竟主角的首要身份是拿人钱财替人办事的佣兵，接到经验和金钱聊胜于无、剧情和演出水平淡如水的任务并不奇怪。但是<strong>聊胜于无的经验和金钱、平淡如水的剧情和演出</strong>却大大降低了外在驱动力，也难怪大量玩家对地图上密集的支线任务图标感到厌烦，更别提积极接取这些任务了。</p>
<p>写到这里，问题也来了：如果降低重复度，并且将支线的经验、金钱、装备奖励设置得足够有吸引力，将支线的剧情、演出设计得扣人心弦，不就可以大大提高内在和外在驱动力了么？</p>
<p>道理是这样没错，但这是一件对游戏设计者和制作者要求非常高的事情。</p>
<p>笔者以同属开放世界ARPG的《艾尔登法环》为例。本作大地图中同样星星点点地分布着墓地、洞窟和坑道，而且死亡惩罚比《刺客信条：奥德赛》严重得多、引导比《刺客信条：奥德赛》克制得多，但包括笔者在内的众多玩家仍然对探索这些区域赶到乐此不疲。</p>
<p>探索墓地、洞窟和坑道的<strong>内在驱动力</strong>至少有这么几种：形态各异的未知关卡和谜题激发探索欲；独特的关底小boss带来新鲜感；埋伏的小怪使玩家保持精神集中；碎片化分布其间的剧情线索满足了玩家认识世界的需求。</p>
<p>然而重复仍然是难以避免的：比如喷火石柱、战车等机关以及机关前的长通道在多个墓地都可以遇到，而且存在感极高；<strong>但是“重复”本身也可以在独特的关卡设计中转化为乐趣</strong>：本作“亚雷萨副墓地”“罗德尔地下墓地”被玩家称为“鬼打墙”墓地，原因是箱庭关卡的各层基本一模一样，如果不仔细区分又错过了机关，玩家会感觉自己已经扫荡了所有地点，却还是被困在空间的循环中。如下图，罗德尔地下墓地由大体相同的三层组成，甚至有极具迷惑性的假Boss房：<br>
<img src="https://liam11811.github.io/post-images/1665755639372.png" alt="" loading="lazy"></p>
<p>写到关卡设计的“<strong>重复</strong>”，我不由得回想起《尼尔：人工生命》最终Boss战前关卡：先是设置“鬼打墙”式谜题，主角在前往Boss房的单向道路上会反复经过同一个喷泉花园房间，直至找出机关才能打破循环——这实际上是非敌对NPC挽留玩家不要走向终局所做的努力之一；而后在Boss房前，还有多个连续排列、以沉重大门分隔的相同房间（如下图），房间的美术风格庄严肃杀、配乐如泣如诉，配上反复密集刷新的小怪群，很好地渲染了游戏走向终局的沉重气氛。<br>
<img src="https://liam11811.github.io/post-images/1665754578944.png" alt="" loading="lazy"></p>
<p>探索墓地、洞窟和坑道的<strong>外在驱动力</strong>至少包括：<br>
（1）数目不定的<strong>经验和金钱</strong>（卢恩）；<br>
（2）<strong>强力装备，尤其是开创了一个战法流派的装备</strong>。比如非常适合法系角色近战的“名刀月隐”，在盖尔坑道击败Boss后获得；如100%物防、大盾防御流的成形武器“指纹石盾”，在罗德尔地下墓地探索获得；又如出血流的核心护符“鲜血君王的欢愉”，在罗德尔地下墓地击败Boss后获得。<br>
（3）<strong>特色装备和道具</strong>。它们并不像前一类装备那样以其强度闻名，而是凭借趣味性获得玩家的青睐，吸引玩家为了获得它们而探索。笔者印象较深的是能在联机中与其他玩家语音互动的“唤声泥颅”，使用它可以发出“你好”“我们开始吧”等简短的语音，非常适合喜欢pvp的社交型和杀手型玩家。还有些特色武器改换了常规的作战方式，对玩家的吸引力也很强，比如被玩家戏称为“脑瓜崩”的“戒指指头”，就是在格密尔英雄墓地探索获得的。它的普通攻击并非常规的劈砍、突刺、冲撞，而是先膨大然后弹出，如下图：<br>
<img src="https://liam11811.github.io/post-images/1665755144996.png" alt="" loading="lazy"></p>
<p>以上文提到的外在驱动力之一——装备为例，《法环》的许多装备有其专属战技（相当于绑定在装备上的技能）、特殊的普攻动作、顺应各流派需求的特性（如对某项属性有高补正或有较强的出血、削韧等效果），因此参考了攻略玩家很乐意为了某件装备特意探索某处墓地，不参考攻略的玩家也知道探索过程很可能带来强力或有趣的装备、愿意前去一试，强大的外在驱动力就形成了。对比之下，攻略《刺客信条：奥德赛》的要塞也能为玩家带来新装备，然而对普通玩家而言，《奥德赛》的许多装备的主要差异还是在于建模和面板数值，同质化严重，玩家就算明知要塞中有装备可以取得，也未必愿意前去，这就是外在驱动力缺乏的表现。</p>
<p>可见，要为玩家提供足够的内在、外在驱动力的确不是容易事。《法环》大获好评的原因之一可能是在游戏内容丰富的前提下，仍能保证内在驱动力尽可能少地因重复而减退，外在驱动力对各类玩家始终保持在较高水平；而《奥德赛》的游戏内容同样充实（其地图远比法环大），精妙的内容也不少，但填充如此大一个世界的许多其他内容却过于雷同或平庸，难以持续提供足够的内在和外在驱动力。</p>
<hr>
<p>笔者想到一种能调动玩家内在和外在驱动力的付费设计——长线运营游戏的战斗通行证。</p>
<p>时下流行的战斗通行证一般分为免费的基础版和付费的高级版，玩家购买高级版与否不会影响通行证进度（等级）的提升，也就是说一名免费玩家正常游玩也会在通行证结算前将它解锁到相当高的等级。</p>
<p>这时只要付费就会立即获得同等级高级通行证的海量奖励，对玩家的诱惑力极大，毕竟“玩都玩了，不买就亏了”。玩家对一次性获得大量奖励是渴望、惊喜的，对花费少量金钱划算地完成一笔交易是渴望的、满足的——总而言之，免费玩家购买高级通行证转为付费玩家的这一决策被玩家强烈的、原始的情感所驱动。</p>
<p>付费一旦完成，“玩都玩了，不买就亏了”就会转变成“买都买了，不玩就亏了”。高级通行证的丰富奖励会称为玩家深度游玩的强大外在驱动力。</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>据笔者的经验，一名玩家很难被只归在某一类，可以说某位玩家在多大程度上倾向于哪类玩家。 <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p>笔者犹豫过是否将要塞称为“箱庭式关卡”，但考虑到本作的要塞大多达不到一些公认的箱庭式关卡的精致程度（尤其是各个小区域的连通性一般），遂作罢。 <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p>https://www.bilibili.com/video/BV1Zt41147de?p=1&amp;vd_source=23762b39b947833cc4cddb579f2ce661 <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[聊聊《极乐迪斯科》的检定]]></title>
        <id>https://liam11811.github.io/post/liao-liao-lesslessji-le-di-si-ke-greatergreater-de-zhi-tou/</id>
        <link href="https://liam11811.github.io/post/liao-liao-lesslessji-le-di-si-ke-greatergreater-de-zhi-tou/">
        </link>
        <updated>2022-10-10T13:31:52.000Z</updated>
        <content type="html"><![CDATA[<p>《极乐迪斯科》的“检定”和人们更常说的“判定”是同一个意思。检定可以追溯到经典TRPG、同时也是众多CRPG灵感来源的《龙与地下城》。TRPG《龙与地下城》有三个要素：明确且涉及数值计算的<strong>规则书</strong> 、控制剧情大致走向并扮演NPC的<strong>主持人</strong>、掷骰带来的<strong>随机性</strong>——这些要素天然地适合被转移到电脑程序。本文将聊聊《极乐迪斯科》以检定为中心的游戏设计。</p>
<p><strong>检定的结果由掷骰结果与调整值二者之和与该检定的难度等级的大小关系决定</strong>，若（掷骰结果+调整值）<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⩾</mo></mrow><annotation encoding="application/x-tex">\geqslant</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733399999999999em;vertical-align:-0.13667em;"></span><span class="mrel amsrm">⩾</span></span></span></span>难度等级，检定成功；反之则失败。<br>
本游戏有被动和主动两种检定。<strong>被动检定</strong>无需玩家手动发起，是在探索或对话过程中自动浮现的思绪。被动检定分为四类，分别由四类技能触发，这点之后将在“技能”板块详细讨论。<strong>主动检定</strong>需要玩家手动发起（也可以选择暂不发起），一般发生在对话过程中。主动检定还可分为白色和红色，前者可以在首次失败后通过一些方法再次尝试；后者则是稍纵即逝的唯一一次机会，不同的检定结果或许会把剧情带向不同方向。</p>
<p>首先解说公式（掷骰结果+调整值）<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⩾</mo></mrow><annotation encoding="application/x-tex">\geqslant</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733399999999999em;vertical-align:-0.13667em;"></span><span class="mrel amsrm">⩾</span></span></span></span>难度等级中最易理解的“<strong>掷骰结果</strong>”和“<strong>难度等级</strong>”。<br>
《极乐迪斯科》的核心gameplay是<strong>掷骰</strong>，准确来说是掷出两个六面骰。<strong>掷骰结果</strong>是随机的，同时掷出两个六面体骰子点数和的概率分布如下（1/36约等于2.78%）：<br>
<img src="https://liam11811.github.io/post-images/1665414192628.png" alt="" loading="lazy"><br>
<img src="https://liam11811.github.io/post-images/1665494301009.png" alt="" loading="lazy"><br>
<strong>难度等级</strong>（Difficulty Class, DC）是直接承袭自《龙与地下城》的概念，表示达成某件事的难度，数值越大越难。</p>
<p><strong>调整值</strong>则稍微复杂，分为技能调整值、装备调整值、剧情调整值。后两者有正负之分，三个值之间的关系是加总。<strong>调整值是由玩家的游戏行为决定的</strong>，若调整值相对于掷骰结果太小、甚至完全没有调整值，那么这个游戏将沦为纯纯的运气游戏。确保“调整值”与“掷骰结果”两个数值间有着合适的大小比例，实际是在把控本作玩家个人选择与系统的随机两者的比重，让玩家达到“尽人事”（尽己所能拉高调整值以通过检定）“听天命”（承认、接纳乃至认同运气成分的存在）的心理状态。</p>
<p>谈到技能就不得不谈到RPG游戏中最直观的一种成长：技能加点。同许多RPG一样，本作技能加点始于人物创建。在游戏正式开始前的人物创建环节，玩家决定人物的属性。本作共有智力、精神、体格、身手四项基本属性。属性是技能分组的依据，每类属性下有6种技能，如下图。<br>
<img src="https://liam11811.github.io/post-images/1665498282443.png" alt="" loading="lazy"><br>
值得注意的是，<strong>初始属性决定了每类技能的加点上限</strong>。例如，在创建人物时为“智力”属性分配1点，那么在游戏过程中“智力”技能组下的6个技能均最多只能加2点（除非使用道具突破上限）。<br>
创建人物时四项属性的点数分配好比人物在各方面的天赋不同，后天努力也难以突破天赋的限制。这与笔者游玩过大多数RPG的加点设计大有不同，后者的上限（不论是软上限还是硬上限）由游戏机制设定，而前者的上限在相当程度上被转交给玩家决定。</p>
<p><strong>技能</strong>。技能的概念很简单，它决定技能调整值，进而影响检定结果。一个检定只会考察一种技能的技能调整值。<br>
值得一提的是，上文提到的被动检定大多需要相应的技能达到一定点数才能触发。如果将多数技能点分配给精神类技能，那么主角的触发的被动检定大多也是精神类的，例如与静物对话、与自然通灵等。很多时候不同的被动检定会依次出现并产生争论，以至于许多玩家将24种技能称为24个分裂的人格，构成了游戏乐趣的一大来源。<br>
<img src="https://liam11811.github.io/post-images/1665475465966.png" alt="" loading="lazy"><br>
如上图，能说会道、内陆帝国、强身健体是分属于3个组别（也用3种颜色区分）的3个技能，当玩家对这3个技能的加点达到要求，相应的3个被动检定也会自动通过。被动检定的表现形式一般是是主角脑海里浮现的思绪，这些人格化的思绪在对主角说话的同时也在对玩家说话。善于分析利用这些被动检定对游戏进程大有助益。</p>
<p><strong>装备</strong>。装备是另一个改变角色属性的系统，包括常规的服装、工具和本游戏特有的“思维阁”。“思维阁”是角色在探案历程中接触到的外界思维的存放地，玩家可从中选取所需的是思维内化于角色的头脑（即花费一定时间来装备某种改变属性的思维），也可以摒弃它（即永久移除装备）——简单地将其理解为需要花费时间才能装备上的一种装备即可。装备的来源有两种，商店购买和地图中搜刮。</p>
<p><strong>剧情调整值</strong>。其主要作用在于激励玩家更深入地体验游戏（例如仔细地巡视、耐心地对话）并且慎重地做决定。<br>
例如，玩家如果没有游历地图以找到适宜约会的地点，在邀约NPC的白色检定中就会受到-8的巨大负面调整值，使邀约几乎不可能成功。换句话说，玩家唯有充分游历地图才能在这个本不太可能通过的检定中获得巨大的剧情调整值。</p>
<hr>
<p>分别介绍了掷骰结果、难度等级和各项调整值后，我们进入对<strong>检定</strong>本身的分析。<br>
<img src="https://liam11811.github.io/post-images/1665415270206.png" alt="" loading="lazy"><br>
在本作中，难度等级数值和对应的描述如上图所示。难度等级10或11是设计者认定的<strong>中等水平难度</strong>，掷骰结果的数学期望是7。一般来说，中等水平的检定不会刻意为难玩家，只需常规的掷骰结果和常规的调整值即可。可见，在游戏设计中，常规的调整值应是3或4。结合笔者的游玩经历，这种调整值是不难达到的：装备调整值常常能达到2，稍微认真地进行对话往往能带来1或2的剧情调整值，何况角色至少还有基本的技能调整值。然而当检定的DC达到18，该检定将成为公认的<strong>高难检定</strong>。<br>
<img src="https://liam11811.github.io/post-images/1665494653870.png" alt="" loading="lazy"><br>
以上图为例，该检定的DC为18，难度为“炼狱”，除了剧情带来的增益，角色自身只有3点调整值；然而剧情为角色带来9点的巨大调整值，让高DC的通过率达到可观的72%。若不是玩家深度体验了游戏、获得如此之高的剧情调整值，通过该检定是几乎不可能的。图中的检定并不影响故事的大体走向，如果角色前往下一区域还需要通过高难检定，那么安排在此处的高难检定就成了货真价实的“拦路虎”，玩家的感受就是“卡关了”。<br>
分析了常规DC和高难DC两种检定，不难看出<strong>检定机制非常有利于设计者调控游戏节奏、引导玩家行为</strong>：<br>
<img src="https://liam11811.github.io/post-images/1665495583984.png" alt="" loading="lazy"><br>
常规难度等级（如DC=11）的检定一般会让适度调整装备、阅读全部文本的玩家顺利通过;而难度等级极高（如DC=18）的检定则使得玩家不得不游玩更多内容或者另寻一条可选路径（另一条路径一般是存在的）来通过。如图，如果不设计高DC检定，玩家可能在游玩小部分内容后直接赶赴下一个地点，导致游玩到的游戏内容极大缺失；如果将游戏内容AB甚至ABCD堆叠在同一路径上，迫使玩家阅读海量文本后才能达到下一区域，强迫的意味过于明显，而且容易导致玩家的疲倦；<strong>本作采取如图的方法来投放难度不一的检定，既保证了相对充实的游戏内容，也让玩家拥有了更多选择的自由</strong>。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[漫谈游戏中背包（储物）系统]]></title>
        <id>https://liam11811.github.io/post/man-tan-you-xi-zhong-bei-bao-chu-wu-xi-tong/</id>
        <link href="https://liam11811.github.io/post/man-tan-you-xi-zhong-bei-bao-chu-wu-xi-tong/">
        </link>
        <updated>2022-10-07T16:14:36.000Z</updated>
        <content type="html"><![CDATA[<p>在本文中，笔者将不拘于特定的游戏类型，漫谈游戏经历中给自己较深印象的背包（储物）系统。</p>
<h2 id="1射击游戏"><strong>1.射击游戏</strong></h2>
<p>在《穿越火线》《逆战》这类团队竞技射击游戏中，一个背包只能装备一个主武器，因此不同的背包配备往往意味着不同的战术选择。要在单局内游玩到更多的战术选择就需要付费解锁更多背包。</p>
<p>不同于团队竞技，大逃杀是极其重视资源收集、取舍、高效利用的射击游戏，背包正是资源的储存空间。《Apex英雄》有“<strong>背包管理</strong>”的说法，“背包管理”是背包容量有限、资源有限的前提下，玩家对自己应该携带什么、携带多少的一种策略性安排。作为存在单局内成长的大逃杀游戏，《Apex英雄》也在每局游戏中投放了容量不同的背包，其容量分别为8、10、12、14、16格。不同资源的单格堆叠上限也不同。以弹药为例，轻型、重型、能量弹药的单格堆叠上限均为60，霰弹弹药堆叠上限为16，狙击弹药堆叠上限为24。</p>
<p>笔者猜测，对于每种弹药，其（单格堆叠上限×单发平均伤害×平均命中率）的乘积应该相差不远，否则将会出现某些枪族过于强势的情况；又考虑到狙击和霰弹的最佳交战距离较局限、上手难度较高，该乘积可以略微拔高，以鼓励水平较高、敢于挑战的玩家。遗憾的是，由于平均命中率这一项数据的缺失，笔者的想法只能停留在猜想层面。</p>
<p>《逃离塔科夫》是一款高度拟真的FPS，而且其重视资源管理和携带物筛选的程度不下于大逃杀。这款游戏的背包也是划分成格子的，但不同携带物占用的格子数不同，而且枪械、弹匣等大件物品还会占据组合成一定形状的多个格子。笔者将这样设计的背包称作“<strong>俄罗斯方块式背包</strong>”。除了容量和易得性，影响玩家对背包选择的还有空间划分方式和外观：游戏中一些大背包的空间会被切分得四分五裂，考虑到“俄罗斯方块”的特性，其利用率还将打折扣；还有一些背包外观过于高调，对玩家的隐匿不利。除了背包，本游戏的储物系统还包括能快捷存取弹匣的胸挂、能保证物品安全的保险箱——它们在<strong>功能性上做出了区分</strong>。</p>
<h2 id="2mmo"><strong>2.MMO</strong></h2>
<p>《最终幻想14》的随身<strong>背包</strong>是不可扩展的，始终为140格，它能存放装备、食物药品等消耗性道具、来源于敌人掉落或者玩家生产采集的素材、家具等几乎所有物品，具有最强的泛用性。与MMO的游戏容量相匹配，除了容量有限的背包以外，本游戏的储物系统还相当庞大。</p>
<p>伴随本游戏丰富的职业选择而来的是庞杂的装备。游戏共有20个战斗特职，11个生产采集职业。不同职业的主手武器不能互通，不同性质（T、N、近战、远敏、法系、生产、采集）职业的饰品和防具基本不能互通。所以游戏设计了专门用来存储装备的“<strong>兵装库</strong>”系统，并实现“切换武器即切换职业”的游戏特色。</p>
<p>便捷性上，背包、兵装库几乎同等，基本随时都可打开；功能性上二者区分明显，背包有最强的泛用性，兵装库只能存放装备。</p>
<p><img src="https://liam11811.github.io/post-images/1665162940976.png" alt="" loading="lazy"><br>
便捷性次之的是<strong>陆行鸟鞍囊</strong>（鸟包）和<strong>雇员仓库</strong>。鸟包相当于70格的背包，但是不可以在副本和野外战斗中打开。每名玩家初始有两名雇员，每名雇员的仓库有175格，但是只有在主城或住宅区的特定地点才能打开。如果爱好囤积或者经商的玩家仍缺少储物空间，游戏也提供扩充鸟包和雇员仓库的付费选项。</p>
<p>最差的便捷性对应最细的细分程度。“<strong>投影台</strong>”就是专为外观幻化准备的，<strong>家具和庭具仓库</strong>则是专为装修准备的，二者在功能上分别对应“外观幻化”和“家园装修”两大非战斗玩法。前者只出现在主城旅馆和军队总部，后者只存在于家园。</p>
<p>由此可见，对于本游戏储物系统而言，<strong>容量相对充足、泛用性强、便捷性高三个特性构成了“不可能三角”</strong>。笔者下面将着重谈谈“便捷性”的意义。</p>
<p><strong>较差的便捷性意味着玩家想要进行存取就不得不进行一段路径基本可控的旅行/位移，从一个功能区到另一个功能区</strong>。以下几种行动路径是容易被想到的：（1）副本外、野外到主城：将不需要的副本掉落物和野怪掉落物从背包转移到雇员处委托卖出；（2）主城、副本外到家园：当玩家从市场上购买或者从副本获得家具时，即使不一定第一时间想到装修（因为许多家具未必符合玩家审美、未必具有高价值），背包容量限制也会令其回家园放置；（3）野外到家园或主城：在野外采集到素材后就地制作成家具用以装修或出售。更多类似的路径不胜枚举。</p>
<p>图 ： 仓储系统限制下发生的功能区之间的转移</p>
<figure data-type="image" tabindex="1"><img src="https://liam11811.github.io/post-images/1665159453046.png" alt="" loading="lazy"></figure>
<p>如上图，仓储系统限制下发生的功能区之间的转移首先能调控游戏节奏，长期的战斗（尤其是反复刷取物品）容易导致疲劳，适时脱战回城或回家能减轻玩家的疲倦感；其次能引领玩家面对密集的人群和私人建筑群，向玩家<strong>展示</strong><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>更炫酷、华美、珍稀的个人外观和家园装修，调动玩家想要获得它们的欲望——获得它们的前提当然是更投入地游玩；最后便于安排各种任务自然地穿插进游玩体验，主城是雇员仓库、投影台所在地，也是职业和转职、大国防联军等任务的接取地，在一次次回城存取和交易的过程中，玩家总会“偶遇”任务相关的NPC，并自然地展开一段新的冒险、解锁新的玩法。</p>
<p>另一款MMO《激战2》的背包则是可扩展的。新手时期的背包容量非常之小，在游戏最初一小时的引导流程中，若玩家习惯于拾起野怪掉落物，背包甚至会装满数次，令新人不得不早早地开始拣选。随后发送至邮箱的新人福利会赠送玩家第一次背包扩充，极大缓解新人面临第一次背包容量危机的茫然和焦虑。</p>
<p>笔者对免费游戏商业化的认识不甚深入，斗胆推测此中用意是引导玩家首次体验紧张的储物空间得到扩展后的如释重负，甚至是游戏进程得以继续推进的舒畅感，培养玩家空间紧张后首先想到扩容的路径依赖。</p>
<h2 id="3非mmo的rpg"><strong>3.非MMO的RPG</strong></h2>
<p>对许多其他RPG而言，背包系统服务于核心玩法。</p>
<p>《原神》的背包容量在RPG中称得上非常大，而且可以随时取用。背包中武器容量为2000，圣遗物容量为1500，养成道具、食物和材料等物品共享2000的容量。<strong>夸张的武器和圣遗物容量反映了这款游戏较深的养成深度</strong>：绝大多数武器和圣遗物并无上场实战的价值，只是养成的材料。对重度玩家来说，上千个既不能分解、出售变废为宝，也暂时无法作为强化材料（因为值得养成的新圣遗物在概率的效应下迟迟未出现）。静静躺在仓库中的圣遗物是曾经数百次攻略副本的证明，也为刷出心仪的圣遗物后立即开始培养做足了准备。但是对笔者这种对强度追求不高的轻度玩家而言，背包容量基本可以视作是无限的，还省去了管理背包的麻烦，算是为轻度玩家减负了。</p>
<p>ARPG《艾尔登法环》考验玩家面对强敌的策略安排和精密操作。顺应于此，《艾尔登法环》引入了了<strong>负重</strong>概念，并为较高的负重状态施加削弱，这也是魂系游戏的通行做法。本游戏的负重水平分为轻（负重上限的30%以下）、中（上限的30%~70%）、重（上限的70%~100%）、超重（超过上限）。其中超重状态下玩家将无法完成翻滚等重要的战术动作，其他状态下的翻滚时长变化如下图所示：</p>
<figure data-type="image" tabindex="2"><img src="https://liam11811.github.io/post-images/1665159506397.png" alt="" loading="lazy"></figure>
<p>另外，《艾尔登法环》的<strong>装备库是无限</strong>的，乐于挑战的玩家大可收集全武器；而在战斗中<strong>能迅捷切换的装备</strong>是有限的，这就迫使玩家在已有的大量武器中选择搭配出适宜自己战法且对当前敌人有针对性的搭配。配合游戏的出身选择和加点机制，玩家在初期一般会专精一种战法（如轻负重的观星者或者重甲持盾近战的流浪骑士），在累计的点数足以加强所有属性的游戏后期甚至多周目，玩家便可以自由探索各种战法。</p>
<p>作为一款以<strong>步行涉险送货</strong>为核心玩法的RPG，《死亡搁浅》则进一步细化了负重。主角运送的货物和携带的装备不仅有精确的重量数值和大中小三档尺寸，它们在主角背部、肩部、双手、大腿外侧的重量分布还将直接影响主角的<strong>平衡</strong>能力。合理安排各个货架上背负的货物是出发送货前可选的游玩内容之一（也可以通过一键最优来跳过）；在艰辛的送货旅途中一边通过扫描仪侦测周边路面、一边不断根据各种信息调整重心和速度则是占据每个玩家大多数配送时间的常态。加入负重和平衡系统后，背包在《死亡搁浅》不再是单纯的储物空间，而是核心玩法的重要组成部分。</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>关于“展示”话题的进一步探讨，可移步作者的另一篇文字《谈“展示空间”》https://gamefriend.fun/post/tan-zhan-shi-kong-jian/。 <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[《文明5》《文明6》战斗力数值简析]]></title>
        <id>https://liam11811.github.io/post/lesslesswen-ming-5greatergreater-lesslesswen-ming-6greatergreater-zhan-dou-li-shu-zhi-jian-xi/</id>
        <link href="https://liam11811.github.io/post/lesslesswen-ming-5greatergreater-lesslesswen-ming-6greatergreater-zhan-dou-li-shu-zhi-jian-xi/">
        </link>
        <updated>2022-10-06T10:44:41.000Z</updated>
        <content type="html"><![CDATA[<p>《文明》系列游戏最新两作《文明5》《文明6》的战斗公式乃至整个战斗机制都与前两作大有不同。新两作中，一次战斗仅发生唯一一次结算；攻击力和防御力不再被区分，能决定单位在战斗中造成或承受的伤害的属性只有“战斗力”。</p>
<p>两款游戏中发生交战的主体一般是是军事单位。不同单位的数值差异首先在于战斗力<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，其次在于不直接和伤害计算相关的行动力和攻击距离。任何单位的最大生命值均为100，避免玩家在考虑战斗力的同时还考虑最大生命值的繁琐。</p>
<h2 id="1伤害公式和战斗力数据"><strong>1.伤害公式和战斗力数据</strong></h2>
<p>《文明5》和《文明6》的伤害公式已经被前人总结且得到公认。</p>
<p>《文明5》伤害公式：random[24~36]*(pow(战力比+3, 4)/512 + 0.5)<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>.</p>
<p>《文明6》伤害公式：random[24~36]*e^(战力差*0.04).</p>
<p>笔者对于两公式的第一印象是，二者都引入了偏差在20%以内的随机性；接下来的一个印象是：《文明5》以比值、在《文明6》以差值衡量战斗力的差异——作商和作差正是数学上衡量两个值差异的基本办法。</p>
<p>落实到游戏中，游戏进程推移，单位的战斗经验更丰富、科技和管理水平也越来越高，战斗力也应随之增长。据此，分别对应经验累积和科技进步，单位的战斗力成长也分为两种：<strong>晋升</strong>和<strong>升级</strong>。从伤害公式（尤其是战斗力差异的度量方式）我们不难推断：《文明6》的单位战斗力增长应该是相对均匀的；而《文明5》单位战斗力增长应是先慢后快，大体呈指数型。下面进入具体的分析阶段。</p>
<h2 id="2晋升的纸面和实战效果"><strong>2.晋升的纸面和实战效果</strong></h2>
<p>晋升旨在对训练扎实和战功累累的单位提供增益，以鼓励玩家练精兵、用精兵、培养精兵，而不是单纯追求单位数量。两作中单位升级对战斗力的加成效果（游戏内称为“晋升”效果）也与两部作品各自的战斗公式相适应。</p>
<p>如图，以远程单位晋升的第一级（初始级）加成为例：<br>
<img src="https://liam11811.github.io/post-images/1665157608992.png" alt="" loading="lazy"><br>
<img src="https://liam11811.github.io/post-images/1665053133102.png" alt="" loading="lazy"></p>
<p>不难看出，《文明5》的晋升是按比例加成战斗力，《文明6》的晋升加成是为战斗力增加固定数值。看起来两作的晋升都是单位进行确定性的增益，但是<strong>战斗力只有放在战斗中才有意义，晋升的作用需要在战斗中进行考量</strong>。</p>
<p>在晋升中，《文明6》战斗公式的优势得以凸显，<strong>某种晋升给任意单位造成伤害的能力的增益是确定的</strong>。</p>
<p>为衡量晋升对任意一单位的增益，令该单位攻击另一不变单位，设该单位晋升前战斗力比目标单位高出A，晋升后战斗力高出A+b，晋升前后对另一单位伤害分别为D1、D2。套用战斗公式可得，D2/D1=e<sup>0.04b，e</sup>0.04b是常数，这个值与是何种单位获得晋升无关。</p>
<p>相比之下，<strong>晋升对《文明5》中单位造成伤害的能力的增益是不确定的</strong>。</p>
<p>此时，设晋升前两单位战斗力之比为k，晋升后战斗力之比为（1+b）k，晋升后、前对同一单位造成伤害之比<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mn>2</mn><mi mathvariant="normal">/</mi><mi>D</mi><mn>1</mn><mo>=</mo><mo>(</mo><mn>256</mn><mo>+</mo><mo>[</mo><mo>(</mo><mn>1</mn><mo>+</mo><mi>b</mi><mo>)</mo><mi>k</mi><mo>+</mo><mn>3</mn><msup><mo>]</mo><mn>4</mn></msup><mo>)</mo><mi>d</mi><mi>i</mi><mi>v</mi><mo>[</mo><mn>256</mn><mo>+</mo><mo>(</mo><mi>k</mi><mo>+</mo><mn>3</mn><msup><mo>)</mo><mn>4</mn></msup><mo>]</mo></mrow><annotation encoding="application/x-tex">D2/D1 =(256+[(1+b)k+3]^4)div[256+(k+3)^4]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">2</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">5</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mopen">[</span><span class="mord">2</span><span class="mord">5</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>。b虽是常数，但该比值还依赖于晋升前两单位战斗力之比k，即同样的晋升对不同单位实际战斗的增益是不同的。</p>
<p>综上所述，《文明6》以作差法衡量战斗力的差异、以固定值作为晋升，《文明5》以作商法衡量战斗力的差异、以固定比例作为晋升，看似都控制了晋升带来的实战增益，但得益于《文明6》战斗公式（主要是<strong>e^x型函数）的优越性</strong>，这一想法才在《文明6》得以完全实现。</p>
<h2 id="3升级另一种数值成长"><strong>3.升级：另一种数值成长</strong></h2>
<p>从数值的角度看，晋升和升级是单位成长的两大部分。</p>
<p>晋升是游戏鼓励玩家产出并锻炼精兵的机制，其效果是为获得晋升的单位按比例（《文明5》）或者按固定数值（《文明6》）提升战斗力。<strong>“升级”<strong>则是游戏内单位随着科技进步和时代推移，通过消耗金钱等资源，提升为同类新单位的过程。某一大类兵种，比如肉搏类/骑兵类/近战舰艇类/远程舰艇类，各自有各自的</strong>升级路径</strong>，例如远古时代的勇士依次升级为剑士、长剑士、火枪手、来复枪兵、早期现代步兵、现代步兵。游戏内在同一升级路径中早期单位与后期单位的主要区别也在于战斗力高低，生命值都统一为100。</p>
<p>对《文明6》进行分析，基于上文的准备工作，每提升任意点战斗力对伤害的加成都可以计算。笔者在统计了若干大类兵种升级路径的战斗力数值后，归纳了以下<strong>四种数值增加模式，它基本囊括了《文明6》中单位升级带来的数值加成</strong>。</p>
<figure data-type="image" tabindex="1"><img src="https://liam11811.github.io/post-images/1665053148905.png" alt="" loading="lazy"></figure>
<p>由上表可见，《文明6》的单位升级其实是四种程度不同的战斗力成长，其中又以程度适中的两种最为常见。在考虑了拟真和平衡问题后，建构整条升级路径其实是非常有规律可循的工作。</p>
<p>而《文明5》单位升级带来的数值成长则远不如《文明6》规整。一大类单位升级路径中战斗力的变化基本呈现指数增长形式，且拟合的可信度较高，如下图。毕竟指数增长、科技爆炸、爆炸性增长这些词汇常常用来描述时代进步带来的巨大效应，《文明5》的战斗力成长也是符合一般认知的。</p>
<figure data-type="image" tabindex="2"><img src="https://liam11811.github.io/post-images/1665053160217.png" alt="" loading="lazy"></figure>
<p>从上图还可以看出，如果《文明5》存在未来时代，单位的战斗力还将继续膨胀至200~300；同时可以设想到的是，如果《文明6》也存在同样多的未来时代，单位的战斗力在隔代常规升级、大升级的基础上不会发生如此夸张的膨胀。《文明6》的数值设计为mod作者以及可能的dlc预留了健康的、直观的数值成长空间。</p>
<h2 id="4代差和秒杀"><strong>4.代差和秒杀</strong></h2>
<p>单位升级的前提是时代推移。《文明》系列单局游戏通常要跨越数个时代（在这两作中最大时代数均为8），尽管在早期生产的单位可以在满足科技等条件后升级为晚期时代的单位，不同时代的单位交战的情况仍然时有发生。<strong>如何模拟跨代交战中双方战损的巨大差异成为游戏需要考虑的问题</strong>。当单位的代差过大，落后的一方被秒杀而领先的一方几乎不受损失是合理的——装备火枪的西班牙远征队轻易征服无法获取马匹、铁矿的印加帝国是军事史上的经典战例。</p>
<p>根据伤害公式可以计算出，当《文明5》单位战斗力之比达到3.17以上、《文明6》单位战斗力之差达到30.1，战斗的期望是高战力单位秒杀低战力单位。一般来说，两作中单位代差达到3就可以达到这种战斗力之比或之差。此时，《文明6》伤害公式的优越性再次凸显：前文定义的两次“隔代常规升级”和一次“隔代大升级”就可以将战斗力之差控制在35，不用计算都能轻松确保代差秒杀。</p>
<p>《文明5》《文明6》采用的伤害公式虽然不同，但在基本遵循“<strong>差3代则秒杀</strong>”原则上二者是一致的。</p>
<h2 id="5单位的合成"><strong>5.单位的“合成”</strong></h2>
<p>《文明6》的单位不能堆叠在同一单元格，但是可以对两或三个同类单位进行编队，也就是通常意义上的“合成”，也是另一种形式上对系列作品中单位堆叠机制的回归。从数值上看，编队的特点有二：一是不会增加单位生命值上限，任何单位的生命值上限都是100，区别只在于战斗力高低，维持了数值的简洁；二是对战斗力的加成分别是两支单位合并+10战斗力、增加50%伤害，三支单位合并+17战斗力、增加100%伤害——可见单位的“合成”相当于前文定义的“隔代常规升级”或“作战重大变革”。</p>
<p>在这一设定下，三支编队的步兵战斗力基本与领先两个时代的一支机械化步兵持平，给玩家带来堆叠数量以跨代击败先进敌方单位的可能性，<strong>往小了说是保持低科技多兵力文明和高科技少兵力文明之间的战力平衡，往大了说是保持战狂型文明和科技型文明之间的平衡、不同选择取向的玩家和AI间的平衡</strong>。</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>远程单位的战斗力被分为较低的“战斗力”和较高的“远程战斗力”，本文主要考虑后一个。 <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p>此公式虽基本得到公认，但在极端情况会与实际值偏离。严谨使用时可分开考虑进攻伤害和反击伤害，并通过作倒数确保比值大于或者等于1。 <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[《中国式家长》数值初探]]></title>
        <id>https://liam11811.github.io/post/lesslesszhong-guo-shi-jia-chang-greatergreater-shu-zhi-chu-tan/</id>
        <link href="https://liam11811.github.io/post/lesslesszhong-guo-shi-jia-chang-greatergreater-shu-zhi-chu-tan/">
        </link>
        <updated>2022-10-03T17:59:47.000Z</updated>
        <content type="html"><![CDATA[<p>《中国式家长》是一款聚焦中国未成年人亲子互动、社交关系以及成长路径、职业选择的模拟养成游戏。本游戏的主角、“中国式家长”的子女需要提升各项属性、学习各类课程并经由一系列自主抉择和随机事件走向游戏的终局——高考、就业和传承后代。</p>
<p><strong>零、数值和基本玩法简介</strong></p>
<p>主角拥有<strong>智商、情商、想象力、记忆力、体魄、魅力</strong>六项可见的属性，其中尤以前四项属性与语数英文理系列课程（即备考系列课程）密切相关，也是本文主要关注的数值。</p>
<p>本游戏可养育多代子女，一代子女的成长期为47个回合。每回合以“挖掘脑洞”为起点，随后处理邀约、面子比拼、班长竞选等事务，最后以做出活动安排并自动执行安排为终点。</p>
<p>其中，**“挖掘脑洞”<strong>环节占据了玩家的绝大部分操作量和大量脑力，具体玩法是玩家通过消耗一定</strong>“行动力”<strong>点击游戏界面中的“脑洞”泡泡，后者大部分是普通脑洞，能为除魅力以外五项属性之一增加一个固定值。在此环节，玩家还可以选择点击</strong>“悟性”**泡泡获得固定25点的悟性，积累起来的悟性可以被花费以学习课程、同时解锁后续课程。</p>
<p>在行动力被消耗完后，玩家可以为主角安排6项活动，可选择的活动随着主角的成长、已学课程的累计和道具的解锁而增多。<strong>安排</strong>完毕后，主角会进行以上6项活动并经历3项随机事件，它们会改变（一般是增加）玩家属性并回复行动力，以备下回合“挖掘脑洞”环节使用。整体过程如下图：</p>
<figure data-type="image" tabindex="1"><img src="https://liam11811.github.io/post-images/1664906972764.png" alt="" loading="lazy"></figure>
<p><strong>一、从直观到具体：属性值与所需悟性值的关系</strong></p>
<p><strong>1.1</strong> <strong>在游玩过程中，笔者注意到：</strong></p>
<p>**（1）**许多课程同时依赖于两项属性，这两项属性能同等地降低悟性消耗，不存在主次之分——进一步地，<strong>四项属性均不存在主次之分</strong>。如下图，依赖于情商和体魄的“翻跟头”课程所需悟性值只由两项数值的总和决定。</p>
<figure data-type="image" tabindex="2"><img src="https://liam11811.github.io/post-images/1664906991415.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://liam11811.github.io/post-images/1664907085630.png" alt="" loading="lazy"></figure>
<p>**（2）**随着某门课程所依赖的属性提高，学习这门课程所需的悟性值从999开始下降，下降趋势先快后慢，且在悟性消耗达到最低值时不再下降。</p>
<p><strong>1.2 量化二者关系</strong></p>
<p>要精确地量化所需悟性值的下降趋势，则需要统计某门课程依赖属性值-所需悟性值的对应关系。笔者依旧以“翻跟头”课程为例，当情商和体魄两数值之和达到81时，“翻跟头”所需悟性值首次从999开始下降；当两数值之和逐渐增加到468左右时，所需悟性降至最低值20。数据参见以下图表：</p>
<figure data-type="image" tabindex="4"><img src="https://liam11811.github.io/post-images/1664907093878.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://liam11811.github.io/post-images/1664907102966.png" alt="" loading="lazy"></figure>
<p>可见，<strong>课程所依赖属性x与课程所消耗悟性y呈幂函数关系，y正比于x-2.2</strong>。</p>
<p>为排除孤例带来的偶然性，笔者再次对依赖于情商的课程“学说话”进行统计，结果如下图：</p>
<figure data-type="image" tabindex="6"><img src="https://liam11811.github.io/post-images/1664907109664.png" alt="" loading="lazy"></figure>
<p>可见，另一门课程所依赖属性x与课程所需悟性y同样呈幂函数关系。考虑到已有数值的诸多局限性<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，以及游戏制作者的一般思路，可以人为y同样正比于x-2.2。</p>
<p><strong>1.3关注临界状态</strong></p>
<p>同样基于数值局限性和反推制作者思路的考虑，<strong>为确定x-2.2的系数，笔者选择用“前/后突变点”进行计算</strong>。</p>
<p>所谓“前突变点”是x增加最小单位（游戏内为1）引起y从固定的最大值999开始下降时的x-y对应值；“后突变点”则是x增加最小单位引起y下降到固定的最低值时的x-y对应值。经试验，“学说话”的突变点是（27，925）（156，20）；“翻跟头”的突变点是（81，975）（468，20）。用一门课程的前和后突变点计算该课程x-2.2的系数所得结果差别不大，“学说话”和“翻跟头”的系数值分别为1.32×106和1.52×107。</p>
<p>同理，<strong>只要能确定任何一门课程的突变点，辅以已知的y正比于x-2.2的关系，就可以较准确地确定全部的x-y对应关系</strong>，这将在理论上极大地有助于有细化操作需求的玩家。</p>
<p><strong>突变点还能揭示游戏制作者阶梯式提高课程所需悟性值的设计思路：</strong></p>
<p>不难观察到，“翻跟头”的前后突变点x值均是“学说话”的3倍。又考虑到两门课程同在游戏早期出现，一般玩家在此时期并不会刻意追求单项属性而是全面发展，且前者依赖于两个属性而后者只依赖于一个，因此在游戏制作者的设计中，<strong>“翻跟头”的学习门槛应是“学说话”的1.5倍；换言之，“翻跟头”是比“学说话”高出半级的课程</strong>。“高半级”的设计同样在游玩过程中可以被敏锐的玩家感知到：</p>
<figure data-type="image" tabindex="7"><img src="https://liam11811.github.io/post-images/1664907118899.png" alt="" loading="lazy"></figure>
<p>如上图，在游戏的第三回合初，玩家已经可以以较低代价学习“学说话”，但是离“翻跟头”还有一步之遥。通过上述分析可知这是游戏制作者有意为之。</p>
<p><strong>二、数值成长</strong></p>
<p>前文已经介绍过，一代子女的成长期为47个回合。每回合以“挖掘脑洞”为起点，随后处理邀约、面子比拼、班长竞选等事务，最后以做出活动安排并自动执行安排为终点。数值成长既包括玩家自由选择性挖掘脑洞、学习课程、处理事件带来的<strong>回合内成长</strong>，也包括安排6种活动、经历3种随机事件并获取每回合数值加成的<strong>回合间成长</strong>。</p>
<p>经过笔者实测（如图），总体上回合内成长与回合间成长带来的数值变化并无量级上的差距，因此回合内挖掘脑洞、处理事务等操作与回合间安排并进行活动、经历随机事件是同等重要的。</p>
<figure data-type="image" tabindex="8"><img src="https://liam11811.github.io/post-images/1664907166434.png" alt="" loading="lazy"></figure>
<p><strong>2.1常规的数值成长历程</strong></p>
<p>笔者以中等加成的家族开局，以高考应试为目标，采取遵循基本玩法、符合玩家直觉的游玩方式，进行了一局游戏并对数值进行记录和分析，试图呈现本游戏最常规的数值成长历程。</p>
<p>以“智商”属性为例，第1至第47回合中智商成长的趋势从直观上看先慢后快、形似指数上升：</p>
<p><img src="https://liam11811.github.io/post-images/1664907179230.png" alt="" loading="lazy"><br>
<img src="https://liam11811.github.io/post-images/1664907195024.png" alt="" loading="lazy"></p>
<p>可是无论以指数函数、一次函数还是高次函数来拟合，效果均称不上理想。此时可以将数值成长分阶段考虑。</p>
<p><strong>2.2数值成长的阶段性</strong></p>
<p>笔者综合实际数值成长曲线和主角成长历程，将本游戏数值成长阶段分为四个：（1）学龄前5回合（2）幼儿园和小学18回合（3）初高中10回合（4）高考冲刺4回合。首尾两短暂阶段的特点尤为明显，故单列：在学龄前，备考系列课程尚未出现，已有数值相对于随机事件引起的数值变化明显偏小；在高考冲刺阶段，“黄冈密卷”等大幅提升四维属性的安排解锁，玩家的游玩逻辑也转变为积攒悟性值尽可能多学习课程。而占据大部分回合数的第二、第三阶段的主要区别在于数值成长速度和是否开放“邀约”系统，并无本质区别。</p>
<p>笔者仍以“智商”属性为例，在划分四阶段后，后三阶段属性成长呈现分段的直线形态，且拟合程度理想；第一阶段仍因前述原因难以很好拟合。</p>
<figure data-type="image" tabindex="9"><img src="https://liam11811.github.io/post-images/1664907203828.png" alt="" loading="lazy"></figure>
<p>可见，<strong>本游戏典型的数值成长历程呈现明显的分段特征</strong>：随着所处阶段向后推移，数值成长的速度加快，在核心玩法不变的基础上开放的次要玩法变多，游玩重心逐渐转移到高考冲刺。游戏制作者也不会任由数值加速膨胀，会对其施以限制，使数值大小可控且与玩法协调。</p>
<p><strong>2.3数值成长中的硬性限制：为了可控和协调<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></strong></p>
<p>游戏明确告知玩家，脑洞层数越高，单次挖掘普通脑洞获得的属性提升越多；游戏没有明确告知玩家的是，一回合能向下挖掘的脑洞层数最高为4，而且如果本层层数是4的倍数，则无法进入下一层。</p>
<p>又经计算，大约每挖掘18层脑洞能使单次挖掘普通脑洞获得的属性额外增加1。因此，在最理想的状态下，需18÷4=4.5回合才能使单次挖掘普通脑洞获得的属性增加1。考虑到游戏的随机性，这样一次成长一般需要6回合左右。而后三阶段的总回合数为42，这就确保了单次挖掘普通脑洞获得的属性会以较均匀速度从初始值4成长6次至上限10或成长7次至上限11，然而即使能成长至11，也是游戏相当晚期的数个回合了，意义不大）。</p>
<p>玩家明明具备策略和运气挖掘到下一层，却被游戏机制所阻止。这种限制看起来简单粗暴，但若完全不加以限制，总会出现超预想的高加成，它使得挖掘脑洞带来的数值成长显著高于前文所述的回合间成长，从而<strong>打破回合内成长与回合间成长的平衡</strong>。这样一来，回合间成长将沦为鸡肋，进一步使德回合间安排并进行活动、经历随机事件变得无关紧要，这是游戏内容和游戏趣味性的极大损失。因此，对单回合脑洞最大下探层数做出硬性限制是合理且简单的。</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>例如，游戏内呈现的数值全部为近似后的自然数、课程所需悟性值最大仅显示为999。 <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p>由于第一阶段的特殊性，本段内容主要关注占据游玩大部分时长的后三阶段。 <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
    </entry>
</feed>